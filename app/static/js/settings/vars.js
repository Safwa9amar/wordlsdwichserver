function addDiv(firstVal = "...", secondVal = 0, id = 0) {
  let html = `  
      <label class="input-group">
        <input type="text" value="${firstVal}" attr-id="${id}" class="input input-bordered" />
        <input type="number" value="${secondVal}" attr-id="${id}"  class="input input-bordered" />
        <span>â‚¬</span>
      </label>
  `;
  return html;
}
function addDivForWorkHours(
  id = 0
) {
  let html = `  
   <label class="input-group">
   <input
     type="text"
     attr-id="{{WorkHour.id}}"
     class="input input-bordered"
     attr-id="${id}"
   />
   <input
     type="time"
     value="{{WorkHour.from_hour}}"
     attr-id="{{WorkHour.id}}"
     class="input input-bordered"
     attr-id="${id}"
   />
   <input
     type="time"
     attr-id="${id}"
     class="input input-bordered"
     attr-id="${id}"

   />
   
  `;
  return html;
}

// generate spinner function
function Loading() {
  return `
    <svg class="animate-spin"  width="26" height="24" viewBox="0 0 26 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_10_2)">
        <path d="M11.87 0.119995C10.9912 0.353334 10.2108 0.863096 9.64399 1.574L9.63699 1.583C9.07594 2.30111 8.77206 3.1867 8.77399 4.098C8.77399 5.199 9.20799 6.199 9.91499 6.935L9.91399 6.934C10.22 7.172 10.426 7.525 10.467 7.927V7.933C10.6201 8.81897 10.6177 9.72484 10.46 10.61L10.467 10.563C10.246 11.6273 9.75875 12.6182 9.05083 13.4431C8.34292 14.268 7.43743 14.9 6.41899 15.28L6.37499 15.294L5.74299 15.534L5.26299 15.401C4.89508 15.291 4.51299 15.2358 4.12899 15.237C3.46199 15.237 2.83399 15.4 2.28099 15.688L2.30299 15.677C1.61353 16.0162 1.03273 16.5416 0.626273 17.1937C0.219817 17.8458 0.00391845 18.5986 0.00299088 19.367C0.00278094 20.1177 0.20818 20.8541 0.596897 21.4963C0.985614 22.1386 1.5428 22.662 2.20799 23.01L2.23099 23.021C2.77894 23.3017 3.38291 23.4559 3.99837 23.4722C4.61384 23.4884 5.22511 23.3663 5.78711 23.1149C6.3491 22.8635 6.8475 22.4891 7.24555 22.0194C7.6436 21.5497 7.93114 20.9966 8.08699 20.401L8.09299 20.372C8.21299 19.878 8.31499 19.746 8.98999 19.241C9.60999 18.791 10.33 18.428 11.105 18.189L11.157 18.175C11.7178 18.0238 12.2962 17.9482 12.877 17.95C14.611 17.95 16.191 18.609 17.38 19.69L17.375 19.685C17.4797 19.7664 17.5667 19.8684 17.6307 19.9846C17.6947 20.1009 17.7342 20.2289 17.747 20.361V20.365C17.9153 21.0743 18.2918 21.7171 18.828 22.211L18.831 22.213C19.115 22.531 19.457 22.79 19.841 22.975L19.86 22.983C20.489 23.3208 21.2046 23.4632 21.915 23.392L21.9 23.393C22.304 23.393 22.693 23.327 23.057 23.205L23.031 23.212C23.6894 22.9824 24.2802 22.5923 24.75 22.0771C25.2198 21.5619 25.5539 20.9377 25.722 20.261L25.728 20.232C25.8482 19.5905 25.8441 18.9319 25.716 18.292L25.721 18.324C25.5368 17.6506 25.1886 17.0333 24.7075 16.5274C24.2263 16.0215 23.6273 15.6427 22.964 15.425L22.934 15.417C22.1925 15.213 21.4116 15.1985 20.663 15.375L20.694 15.369C20.4829 15.4528 20.2554 15.4873 20.0289 15.47C19.8025 15.4527 19.5829 15.3839 19.387 15.269L19.394 15.273C16.917 14.338 15.188 11.987 15.188 9.232C15.188 8.797 15.231 8.372 15.313 7.961L15.306 8.002L15.414 7.436L15.814 7.009C16.536 6.30023 16.962 5.3438 17.006 4.333V4.325C17.0593 3.37914 16.7837 2.44396 16.226 1.67821C15.6682 0.912458 14.8626 0.363314 13.946 0.123995L13.917 0.117995C13.2321 -0.0401361 12.5198 -0.0377403 11.836 0.124995L11.867 0.118995L11.87 0.119995ZM13.63 2.666C13.8579 2.78118 14.0551 2.94882 14.2056 3.15512C14.356 3.36142 14.4554 3.60049 14.4954 3.85267C14.5354 4.10485 14.515 4.36292 14.4358 4.60567C14.3567 4.84842 14.221 5.06891 14.04 5.249C13.898 5.4099 13.7191 5.53392 13.5186 5.61039C13.3181 5.68686 13.1021 5.71349 12.889 5.688L12.895 5.689C12.6835 5.71323 12.4694 5.68617 12.2706 5.61011C12.0718 5.53404 11.8942 5.4112 11.753 5.252L11.752 5.251C11.5587 5.07136 11.4157 4.84442 11.3369 4.59258C11.2582 4.34075 11.2465 4.07273 11.303 3.815L11.301 3.825C11.3463 3.57506 11.4495 3.33922 11.6024 3.13641C11.7553 2.93359 11.9536 2.76944 12.1815 2.65713C12.4093 2.54482 12.6603 2.48749 12.9143 2.48972C13.1682 2.49196 13.4182 2.5537 13.644 2.67L13.635 2.666H13.63ZM13.967 12.056C14.481 12.307 14.887 12.714 15.129 13.215L15.135 13.23C15.2933 13.5429 15.3519 13.8968 15.303 14.244L15.304 14.235C15.3517 14.607 15.2829 14.9847 15.107 15.316L15.112 15.306C14.942 15.6607 14.6897 15.9695 14.376 16.2068C14.0624 16.4441 13.6965 16.6029 13.309 16.67L13.294 16.672C12.7694 16.7534 12.2326 16.6643 11.7624 16.4179C11.2922 16.1715 10.9135 15.7807 10.682 15.303L10.676 15.288C10.5036 14.9621 10.4389 14.59 10.491 14.225L10.49 14.234C10.4439 13.8907 10.5014 13.5415 10.655 13.231L10.65 13.241C10.7924 12.936 10.994 12.6623 11.2431 12.4358C11.4922 12.2094 11.7838 12.0347 12.101 11.922L12.119 11.917C12.4038 11.8161 12.7078 11.7815 13.008 11.816L12.999 11.815L13.066 11.814C13.399 11.814 13.712 11.903 13.981 12.058L13.972 12.053L13.967 12.056ZM4.57299 17.754C5.01599 17.891 5.37299 18.195 5.57699 18.591L5.58099 18.6C5.74166 18.8407 5.80361 19.1339 5.75399 19.419L5.75499 19.412C5.74629 19.7203 5.64754 20.0194 5.4709 20.2722C5.29427 20.5251 5.04749 20.7207 4.76099 20.835L4.74999 20.839C4.51917 20.9203 4.2741 20.9532 4.03 20.9359C3.7859 20.9185 3.54798 20.8511 3.33099 20.738L3.34099 20.743C3.07054 20.5899 2.85039 20.3615 2.7073 20.0856C2.56421 19.8098 2.50435 19.4983 2.53499 19.189L2.53399 19.196C2.55427 18.8226 2.718 18.4715 2.99099 18.216L2.99199 18.215C3.18593 17.9949 3.4387 17.8348 3.72055 17.7535C4.0024 17.6721 4.30162 17.673 4.58299 17.756L4.57199 17.753L4.57299 17.754ZM22.269 17.814C22.667 17.989 22.987 18.281 23.191 18.647L23.196 18.657C23.272 18.852 23.316 19.078 23.316 19.314C23.316 19.584 23.259 19.84 23.155 20.071L23.16 20.059C23.0329 20.3238 22.8336 20.5474 22.585 20.704C22.3365 20.8605 22.0487 20.9437 21.755 20.944L21.713 20.943H21.715C21.5085 20.9499 21.3028 20.9158 21.1096 20.8426C20.9165 20.7693 20.7398 20.6585 20.5898 20.5164C20.4399 20.3744 20.3196 20.2039 20.236 20.015C20.1525 19.8261 20.1072 19.6225 20.103 19.416V19.414C20.0551 19.1266 20.1207 18.8319 20.286 18.592L20.283 18.596C20.4529 18.2348 20.7551 17.9526 21.127 17.8076C21.499 17.6627 21.9124 17.666 22.282 17.817L22.272 17.813L22.269 17.814ZM5.06199 6.082C4.05978 7.22674 3.31167 8.57096 2.86699 10.026L2.84699 10.102C2.62999 10.891 2.61299 11.108 2.81699 10.502C3.13599 9.638 3.48699 8.904 3.89399 8.207L3.85699 8.27499C4.25599 7.64799 4.67999 7.103 5.15099 6.602L5.14499 6.608C5.30759 6.45356 5.45248 6.2815 5.57699 6.095L5.58399 6.084C5.56473 6.02823 5.53355 5.97734 5.49262 5.93486C5.45169 5.89237 5.402 5.85932 5.34699 5.838L5.34399 5.837C5.23399 5.903 5.14099 5.984 5.06399 6.08L5.06199 6.082ZM20.742 6.498C21.7058 7.67144 22.3941 9.04621 22.756 10.521L22.771 10.591C22.976 11.471 23.011 11.551 23.157 11.551C23.391 11.551 23.416 11.358 23.247 10.786C22.78 9.16898 21.9347 7.68642 20.781 6.461L20.786 6.466L20.386 6.044L20.742 6.498ZM5.44899 7.293C4.85152 8.07762 4.38607 8.95447 4.07099 9.889L4.05199 9.953C3.79299 10.742 3.72699 11.121 3.95599 10.525C4.38199 9.43899 4.95599 8.505 5.66399 7.69L5.65399 7.702C5.95499 7.353 6.00299 7.239 5.87599 7.112C5.74899 6.985 5.66599 7.027 5.44899 7.292V7.293Z" fill="white"/>
        <path d="M20.273 7.642C20.9541 8.62645 21.4473 9.72828 21.728 10.892L21.742 10.959C21.778 11.128 21.902 11.212 22.043 11.157C22.193 11.097 22.203 10.964 22.055 10.549C21.6262 9.35598 20.959 8.26277 20.094 7.336L20.099 7.341C19.997 7.227 20.075 7.359 20.273 7.642V7.642ZM5.65299 8.598C5.31582 9.18531 5.05537 9.81343 4.87799 10.467L4.86499 10.524C4.95302 10.4025 5.03222 10.2748 5.10199 10.142L5.11099 10.124C5.32299 9.756 5.53499 9.442 5.76499 9.145L5.75099 9.164C6.04599 8.764 6.12999 8.616 6.08799 8.544C5.97799 8.381 5.79199 8.405 5.65399 8.598H5.65299ZM20.002 8.93C20.148 9.215 20.295 9.561 20.418 9.918L20.436 9.977C20.629 10.561 20.767 10.697 20.948 10.471C21.056 10.338 21.056 10.326 20.868 9.996C20.5766 9.50199 20.2497 9.02975 19.89 8.583L19.908 8.606C19.75 8.413 19.756 8.444 20.002 8.931V8.93ZM11.486 21.72C11.4622 21.755 11.4532 21.7981 11.4611 21.8397C11.469 21.8813 11.493 21.9181 11.528 21.942H11.529C11.619 22.032 11.727 22.038 12.51 22.002C12.99 21.984 13.479 21.948 13.593 21.922C13.791 21.886 13.798 21.88 13.653 21.838C13.4954 21.8079 13.3354 21.7918 13.175 21.79H13.173C12.8806 21.7724 12.5892 21.7404 12.3 21.694C11.597 21.581 11.565 21.581 11.486 21.72V21.72ZM10.42 22.364C10.318 22.406 10.318 22.598 10.42 22.677C11.0249 22.8453 11.6501 22.9298 12.278 22.928C12.454 22.928 12.629 22.921 12.802 22.909L12.779 22.91C13.4543 22.9038 14.1263 22.8148 14.78 22.645L14.723 22.658H14.678C14.454 22.658 14.234 22.671 14.017 22.697L14.043 22.694C13.1196 22.7556 12.1922 22.6869 11.288 22.49L11.353 22.502C10.667 22.352 10.516 22.324 10.42 22.366V22.364ZM9.40299 23.261C9.33099 23.442 9.46299 23.556 9.86599 23.661C10.669 23.875 11.592 23.998 12.543 23.998C13.294 23.998 14.028 23.921 14.736 23.775L14.666 23.787C15.286 23.667 15.268 23.613 14.636 23.707C13.1801 23.8789 11.7044 23.7579 10.296 23.351L10.374 23.37C9.63299 23.152 9.45099 23.128 9.40299 23.26V23.261Z" fill="black"/>
        </g>
        <defs>
        <clipPath id="clip0_10_2">
        <rect width="26" height="24" fill="white"/>
        </clipPath>
        </defs>
    </svg>
  
      `;
}

async function fetchAsyncGet(url, addingTarget) {
  const response = await fetch(url, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
    },
  }).then((res) => {
    addingTarget.innerHTML = Loading();
    if (res.status === 200) {
      addingTarget.innerHTML = "";
    }
    return res;
  });
  const data = await response.json();
  return data;
}

async function fetchAsyncPost(url, formData) {
  const response = await fetch(url, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(formData),
  });
  const data = await response.json();
  return {data : data, status : response.status};
}
